=========================================
Checklist prior to shipping a new version
=========================================

0. Check prerequisites
----------------------

    bin/checkDevPrereqs.py
    

1. Run all unit tests
---------------------

    ant run-tests
    src/test/python/runCoverage.sh

- Check that no tests failed
- Check that the unit test coverage looks OK.  Note that coverage-marked versions
  of source files are in target/python/coverage
- If ant shows errors (path not found etc.), you may need to override paths in a 
  build.properties file in the top-level directory.


2. Check test coverage
----------------------

    ant clean coverage
    open target/java/coverage-report/index.html


3. Update version number
------------------------

Required in 3 places:

- build.xml.
- setup.py
- resource/docs/source/conf.py


4. Check CHANGES and TODO
-------------------------

- Ensure that all changes are recorded, and removed from TODO.
- Ensure that the version number and release date are correct in CHANGES.


5. Do a clean ant build
-----------------------

    ant clean package


6. Generate and Check Documentation
-----------------------------------

Generate the doco:

    bin/buildDoco.sh
    open target/docs/html/index.html

Review, and ensure that there are no errors building, and no changes necessary.  Note that
the buildDoco script will generate new small (thumbnail) images of any PNG file that has
been modified - it will warn you of this, so make sure you add/commit the changes to git!

Check all links (should be warnings about no robots for forums):

    linkchecker target/docs/html target/docs/javadoc

To change the overview.svg diagram, use Inkscape, and:

    - Export Bitmap
    - Select 'Drawing' tab page
    - Save as overview.png, at about 90dpi


7. Check in git for modifications
----------------------------------------

    git status
    git commit -a

NOTE: If you're on a branch, make sure you merge the branch back to master:

    git branch              # to get the branch name
    git checkout master
    git merge the-branch-name


8. Package the build
----------------------------

    bin/package.sh

The zip file is in the target/package directory.


9. Test the build
-----------------

    bin/installForTest.sh 0.5.9

This will unpack the install package under target/install-test/clichart-$version, and will
install it in a python virtualenv under that directory.
Execute the commands listed at the end of the script output to test it, e.g.
 
   . target/install-test/clichart-0.5.9/virtualenv/bin/activate
   easy_install target/install-test/clichart-0.5.9/clichart-0.5.9/clichart-0.5.9.egg
   bin/testInstall.py
   deactivate

Close the interactive charts as they come up.  Expect lots of OKs and some echos on the
terminal, plus some stderr: echos.

Charts will be saved under target/install-test/output.  You should now eyeball the charts
produced, using an appropriate image viewer, e.g.

    gwenview target/install-test/output    # or gqview, or ...

Also:
- Check doco

    linkchecker target/install-test/clichart-0.5.9/clichart-0.5.9/docs/javadoc 
    linkchecker target/install-test/clichart-0.5.9/clichart-0.5.9/docs/html/index.html



10. Tag in Git, and push source to Github
-----------------------------------------

    git tag 0.5.9
    git push -u --tags origin master


11. Create release in Github
----------------------------

- Go to Release tab
- Click Draft a new release
- Select tag
- Enter most recent part of changelog, and check that it previews OK
- Click to upload the zip file (from target/package)


